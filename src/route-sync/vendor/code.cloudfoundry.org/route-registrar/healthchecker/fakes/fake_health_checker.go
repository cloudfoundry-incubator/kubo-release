// This file was generated by counterfeiter
package fakes

import (
	"sync"
	"time"

	"code.cloudfoundry.org/route-registrar/commandrunner"
	"code.cloudfoundry.org/route-registrar/healthchecker"
)

type FakeHealthChecker struct {
	CheckStub        func(runner commandrunner.Runner, scriptPath string, timeout time.Duration) (bool, error)
	checkMutex       sync.RWMutex
	checkArgsForCall []struct {
		runner     commandrunner.Runner
		scriptPath string
		timeout    time.Duration
	}
	checkReturns struct {
		result1 bool
		result2 error
	}
}

func (fake *FakeHealthChecker) Check(runner commandrunner.Runner, scriptPath string, timeout time.Duration) (bool, error) {
	fake.checkMutex.Lock()
	fake.checkArgsForCall = append(fake.checkArgsForCall, struct {
		runner     commandrunner.Runner
		scriptPath string
		timeout    time.Duration
	}{runner, scriptPath, timeout})
	fake.checkMutex.Unlock()
	if fake.CheckStub != nil {
		return fake.CheckStub(runner, scriptPath, timeout)
	} else {
		return fake.checkReturns.result1, fake.checkReturns.result2
	}
}

func (fake *FakeHealthChecker) CheckCallCount() int {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return len(fake.checkArgsForCall)
}

func (fake *FakeHealthChecker) CheckArgsForCall(i int) (commandrunner.Runner, string, time.Duration) {
	fake.checkMutex.RLock()
	defer fake.checkMutex.RUnlock()
	return fake.checkArgsForCall[i].runner, fake.checkArgsForCall[i].scriptPath, fake.checkArgsForCall[i].timeout
}

func (fake *FakeHealthChecker) CheckReturns(result1 bool, result2 error) {
	fake.CheckStub = nil
	fake.checkReturns = struct {
		result1 bool
		result2 error
	}{result1, result2}
}

var _ healthchecker.HealthChecker = new(FakeHealthChecker)
