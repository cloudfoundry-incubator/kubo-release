#!/bin/bash
set -e

main() {
    local images staging_dir

    images=(
      "gcr.io/google_containers/pause-amd64:3.0"
      "gcr.io/google_containers/heapster:v1.1.0"
      "kubernetes/heapster_influxdb:v0.6"
      "gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.6"
      "gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.6"
      "gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.6"
      "gcr.io/google_containers/kubernetes-dashboard-amd64:v1.8.0"
    )

    staging_dir=$(mktemp -d)

    trap '{ rm -rf "$staging_dir"; }' EXIT

    pushd "$(dirname "${BASH_SOURCE[0]}")/.."
        for image in "${images[@]}"; do
            if blob_missing "$image"; then
                output_file=${image//\//_}.tgz
                output_path="${staging_dir}/${output_file}"
                download "${image}" "${output_path}"
                add_blob "${output_path}" "${output_file}"
            else
                echo "blob for $image already exists"
            fi
        done
    popd
}

blob_missing() {
    local image full_image_name
    image="$1"

    full_image_name="container-images/${image//\//_}"

    if bosh-cli blobs | grep -q "$full_image_name" ; then
        return 1
    else
        return 0
    fi
}

download() {
    local image_name output_path
    image_name="$1"
    output_path="$2"

    docker pull "${image_name}"
    docker save "${image_name}" | gzip > "${output_path}"

    echo "saving to: ${output_path}"
}

add_blob() {
    local binary_path="$1"
    local binary_name="$2"

    bosh-cli add-blob "${binary_path}" "container-images/${binary_name}"
}

main
