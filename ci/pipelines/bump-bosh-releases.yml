---
resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/kubo-ci
    branch: master

- name: git-kubo-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/kubo-release.git
    branch: develop
    private_key: ((git-ssh-key.private_key))

- name: cfcr-etcd-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/cfcr-etcd-release

- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

- name: docker-boshrelease
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/docker-boshrelease

- name: gcs-precompiled-cfcr-etcd-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-precompiled-releases
    regexp: cfcr-etcd-(.*).tgz

- name: gcs-precompiled-docker-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-precompiled-releases
    regexp: docker-.*-ubuntu-.*-(.*-.*-.*)

- name: gcs-precompiled-bpm-untested
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-precompiled-releases
    regexp: bpm-(.*).tgz

- name: compilation-deployment
  type: bosh-deployment
  source:
    deployment: compilation-default
    skip_check: true

- name: gcs-source-json
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: source.json

jobs:
- name: bump-bpm-release
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: git-kubo-release
    - get: gcs-source-json
    - get: bpm-release
      trigger: true
  - task: bump-boshrelease
    file: git-kubo-ci/tasks/bump-boshrelease.yml
    input_mapping:
      boshrelease: bpm-release
    params:
      RELEASE_NAME: bpm
  - task: generate-compilation-manifest
    file: git-kubo-ci/tasks/generate-compilation-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "bpm"
  - put: compilation-deployment
    params:
      manifest: compilation-manifest/manifest.yml
      source_file: gcs-source-json/source.json
  - task: export
    file: git-kubo-ci/tasks/export-release.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "bpm"
  - put: gcs-precompiled-bpm-untested
    params:
      file: compiled-releases/bpm-*.tgz
  - task: bump-precompiled-releases-in-manifest
    file: git-kubo-ci/tasks/bump-precompiled-releases-in-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "bpm"
  - put: git-kubo-release
    params:
      repository: git-kubo-release-output

- name: bump-etcd-release
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: git-kubo-release
    - get: gcs-source-json
    - get: cfcr-etcd-release
      trigger: true
  - task: bump-etcd-release
    file: git-kubo-ci/tasks/bump-boshrelease.yml
    input_mapping:
       boshrelease: cfcr-etcd-release
    params:
      RELEASE_NAME: cfcr-etcd
  - task: generate-compilation-manifest
    file: git-kubo-ci/tasks/generate-compilation-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "cfcr-etcd"
  - put: compilation-deployment
    params:
      manifest: compilation-manifest/manifest.yml
      source_file: gcs-source-json/source.json
  - task: export
    file: git-kubo-ci/tasks/export-release.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "cfcr-etcd"
  - put: gcs-precompiled-cfcr-etcd-untested
    params:
      file: compiled-releases/cfcr-etcd-*.tgz
  - task: bump-precompiled-releases-in-manifest
    file: git-kubo-ci/tasks/bump-precompiled-releases-in-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "cfcr-etcd"
  - put: git-kubo-release
    params:
      repository: git-kubo-release-output

- name: bump-docker-boshrelease
  plan:
  - in_parallel:
    - get: git-kubo-ci
    - get: git-kubo-release
    - get: gcs-source-json
    - get: docker-boshrelease
      trigger: true
  - task: bump-kubo-docker
    file: git-kubo-ci/tasks/bump-boshrelease.yml
    input_mapping:
      boshrelease: docker-boshrelease
    params:
      RELEASE_NAME: docker
  - task: generate-compilation-manifest
    file: git-kubo-ci/tasks/generate-compilation-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "docker"
  - put: compilation-deployment
    params:
      manifest: compilation-manifest/manifest.yml
      source_file: gcs-source-json/source.json
  - task: export
    file: git-kubo-ci/tasks/export-release.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "docker"
      JOBS_LIST: containers docker flannel sanity-tests swarm-agent swarm-manager
  - put: gcs-precompiled-docker-untested
    params:
      file: compiled-releases/docker-*.tgz
  - task: bump-precompiled-releases-in-manifest
    file: git-kubo-ci/tasks/bump-precompiled-releases-in-manifest.yml
    input_mapping:
      git-kubo-release: git-kubo-release-output
    params:
      RELEASE_LIST: "docker"
  - put: git-kubo-release
    params:
      repository: git-kubo-release-output
