#!/usr/bin/env bash

set -e

config_dir="/var/vcap/jobs/kubernetes-system-specs/config/"

kubectl="/var/vcap/packages/kubernetes/bin/kubectl --kubeconfig=/var/vcap/jobs/kubernetes-system-specs/config/kubeconfig"

apply_spec() {
  local spec_file="${config_dir}/${1}"
  ${kubectl} apply -f "${spec_file}" || echo "Spec file already applied: ${1}"
}

wait_for() {
    ${kubectl} rollout status "deployments/${1}" -w --namespace=kube-system
}

create_dashboard_secrets() {
  local secret_name=kubernetes-dashboard-certs
  local namespace=kube-system

  if ${kubectl} get secret ${secret_name} -n ${namespace}; then
    ${kubectl} delete secret ${secret_name} -n ${namespace}
  fi

  ${kubectl} create secret generic ${secret_name} \
  --from-file=kubernetes-dashboard-cert=${config_dir}/kubernetes-dashboard/kubernetes-dashboard.crt \
  --from-file=kubernetes-dashboard-key=${config_dir}/kubernetes-dashboard/kubernetes-dashboard.key \
  -n ${namespace}
}

main() {
  apply_spec "kubedns-svc.yml"
  apply_spec "kubedns-controller.yml"
  wait_for kube-dns

  apply_spec "heapster.yml"
  wait_for heapster

  apply_spec "influxdb.yml"
  wait_for monitoring-influxdb

  create_dashboard_secrets
  apply_spec "kubernetes-dashboard.yml"
  wait_for kubernetes-dashboard

  <% if_link('cloud-provider') do |link| %>
    <% link.if_p('cloud-provider.type') do |p| %>
      <% if p == 'gce' %>
        apply_spec "storage-class-gce.yml"
      <% end %>
    <% end %>
  <% end %>
}

main
