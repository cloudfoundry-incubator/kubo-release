#!/bin/bash
set -e

# Job spec config
UAA_API_URL="<%=p("uaa_api_url") %>"
UAA_CLIENT_ID="<%=p("uaa_client_id") %>"
UAA_CLIENT_SECRET="<%=p("uaa_client_secret") %>"
CLOUD_FOUNDRY_API_URL="<%=p("cloud_foundry_api_url") %>"
BACKEND_PORT="<%=p("backend_port") %>"
BACKEND_IP="<%=p("backend_ip", spec.networks.send(spec.networks.methods(false).first).ip) %>"
KUBO_PORT="<%=p("kubo_port") %>"

# Fetch UAA token
UAA_REQUEST=$(curl -s -k -X POST ${UAA_API_URL}/oauth/token --data "client_id=${UAA_CLIENT_ID}&client_secret=${UAA_CLIENT_SECRET}&grant_type=client_credentials&response_type=token")
UAA_TOKEN=$(echo ${UAA_REQUEST} | jq -r .access_token)

# Find the routing group GUID. Assumes the first one is a TCP router.
ROUTING_GROUP_REQ=$(curl -s -H "Authorization: bearer ${UAA_TOKEN}" -k ${CLOUD_FOUNDRY_API_URL}/routing/v1/router_groups)
RG_GUID=$(echo ${ROUTING_GROUP_REQ} | jq -r .[0].guid )

# Register the route
ROUTE="[{\"router_group_guid\":\"${RG_GUID}\",\"backend_port\":${BACKEND_PORT},\"backend_ip\":\"${BACKEND_IP}\",\"port\":${KUBO_PORT}, \"ttl\": 60}]"
NEW_ROUTE_REQ=$(curl -s -H "Authorization: bearer ${UAA_TOKEN}" -X POST -k ${CLOUD_FOUNDRY_API_URL}/routing/v1/tcp_routes/create -d "${ROUTE}")	

echo "Announced: ${ROUTE}"
