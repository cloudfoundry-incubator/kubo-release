#!/bin/bash -ex

NAME="${0##*/}"

export PATH=/var/vcap/packages/kubernetes/bin/:$PATH

RUN_DIR=/var/vcap/sys/run/kubernetes
PIDFILE=$RUN_DIR/kube-proxy.pid
LOG_DIR=/var/vcap/sys/log/kube-proxy

<% if_p('cloud-provider') do |cloud_provider| %>
  cloud_provider="<%= cloud_provider %>"
<% end %>

# shellcheck disable=SC1091
. /var/vcap/packages/pid_utils/pid_utils.sh

setup_directories() {
  mkdir -p "$RUN_DIR" "$LOG_DIR"
  chown -R vcap:vcap "$RUN_DIR" "$LOG_DIR"
}

send_process_stdout_to_logfile() {
  exec 1>> "$LOG_DIR/$NAME.stdout.log"
}

send_process_stderr_to_logfile() {
  exec 2>> "$LOG_DIR/$NAME.stderr.log"
}

get_hostname_override() {
  if [[ "gce" == "$cloud_provider" ]]; then
    # The hostname needs to be set to the instance name so the gce cloud provider can manage the instance
    hostname_override=$(curl http://metadata.google.internal/computeMetadata/v1/instance/name -H "Metadata-Flavor: Google")
  elif [[ "azure" == "$cloud_provider" ]]; then
    # K8s Azure provider assumes  the hostname == nodename and is required to resolve the VM instance ID
    hostname_override=
  else
    hostname_override=<%= spec.ip %>
  fi

  echo $hostname_override
}

start_kubernetes_proxy() {

  sed -i "s|HOSTNAMEOVERRIDE|$(get_hostname_override)|g"  /var/vcap/jobs/kube-proxy/config/config.yml

 kube-proxy \
  --config /var/vcap/jobs/kube-proxy/config/config.yml \
  --v=<%=p('logging-level') %> \
  1>> $LOG_DIR/kube_proxy.stdout.log \
  2>> $LOG_DIR/kube_proxy.stderr.log
}

stop_kubernetes_proxy() {
  kill_and_wait "$PIDFILE"
}

pid() {
  head -1 "$PIDFILE"
}

stop_associated_logging_processes() {
  # shellcheck disable=SC2046
  pkill -g $(get_group_pid)
}

get_group_pid() {
  ps -ho pgrp "$(pid)"
}

case $1 in

  start)
    setup_directories
    send_process_stdout_to_logfile
    send_process_stderr_to_logfile

    pid_guard "$PIDFILE" "Kubernetes Proxy"

    echo $$ > $PIDFILE
    start_kubernetes_proxy
    ;;

  stop)
    stop_associated_logging_processes
    stop_kubernetes_proxy
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    ;;

esac
