<%-
  def hns_network_name
    if link('flanneld-windows').p('backend-type') == "win-overlay"
      "flannel.4096"
    else
      "cbr0"
    end
  end
-%>
trap { $host.SetShouldExit(1) }

$hnsNetworkName = "<%= hns_network_name %>"
$sourceVIPFile = "/var/vcap/data/kube-proxy-windows/sourceVip.json"
$configFile = "/var/vcap/jobs/kube-proxy-windows/config/config.yml"

function ensure_kubelet_is_running {
  curl.exe --fail http://localhost:10248/healthz
  if (-not $?) {
    throw "kubelet is not available"
  }
}

function set_source_vip {
  if (!(Test-Path $sourceVIPFile)) {
    $network = Get-HnsNetwork | ? Name -Eq $hnsNetworkName
    $subnet = $network.Subnets[0].AddressPrefix
    $ipamConfig = @"
{"cniVersion": "0.2.0", "name": "$hnsNetworkName", "ipam":{"type":"host-local","ranges":[[{"subnet":"$subnet"}]],"dataDir":"/var/lib/cni/networks"}}
"@
    $env:CNI_COMMAND="ADD"
    $env:CNI_CONTAINERID="dummy"
    $env:CNI_NETNS="dummy"
    $env:CNI_IFNAME="dummy"
    $env:CNI_PATH="/var/vcap/packages/cni-windows/bin"

    echo $ipamConfig | /var/vcap/packages/cni-windows/bin/host-local.exe > $sourceVIPFile
  }

  if (!(Select-String -Path $configFile -Pattern "sourceVip")) {
    $vip = (Get-Content $sourceVIPFile | ConvertFrom-Json).ip4.ip.Split("/")[0]
    $config = @"
winkernel:
  sourceVip: $vip
"@
    Add-Content -Path $configFile -Value $config
  }
}

function start_kube_proxy {
  $env:KUBE_NETWORK = $hnsNetworkName

  C:\var\vcap\packages\kubernetes-windows\bin\kube-proxy.exe -v 5 `
  --config $configFile
}

function check_for_networking {
  $subnetConfig="/run/flannel/subnet.env"

  if (-not ([System.IO.File]::Exists($subnetConfig)))
  {
    throw "$subnetConfig does not exist, waiting for flannel initialization"
  }
}

function misc_setup {
  # Prestart doesn't get run again on recreate, so need to do this in ctl
  Set-NetFirewallProfile -Profile Domain, Public, Private -Enabled False

  <% if_p('cloud-provider') do |cloud_provider| %>
    <% if cloud_provider == "vsphere" %>
  # Override the hostname to work around
  # vSphere cloud provider ignoring hostname override
  # and kubernetes requiring all-lowercase node names
  $ComputerName = (cat C:\var\vcap\bosh\settings.json | ConvertFrom-Json).agent_id
  Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters" -name "Hostname" -value $ComputerName
    <% end %>
  <% end %>

  # Needed until https://github.com/kubernetes/kubernetes/pull/71147 is merged
  mkdir -force /sys/class/dmi/id
  (wmic csproduct get IdentifyingNumber).Split([Environment]::Newline)[2] | Out-File -Encoding ASCII /sys/class/dmi/id/product_serial
}

function main() {
  misc_setup
  check_for_networking
  set_source_vip
  start_kube_proxy
}

main
