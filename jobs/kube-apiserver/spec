name: kube-apiserver
templates:
  bin/ensure_apiserver_healthy.erb: bin/ensure_apiserver_healthy
  bin/post-start.erb: bin/post-start
  config/audit_policy.yml: config/audit_policy.yml
  config/bpm.yml.erb: config/bpm.yml
  config/cloud-provider.ini.erb: config/cloud-provider.ini
  config/etcd-ca.crt.erb: config/etcd-ca.crt
  config/etcd-client.crt.erb: config/etcd-client.crt
  config/etcd-client.key.erb: config/etcd-client.key
  config/kubelet-client-cert.pem.erb: config/kubelet-client-cert.pem
  config/kubelet-client-key.pem.erb: config/kubelet-client-key.pem
  config/kubernetes-key.pem.erb: config/kubernetes-key.pem
  config/kubernetes.pem.erb: config/kubernetes.pem
  config/oidc-ca.pem.erb: config/oidc-ca.pem
  config/openstack-ca.crt.erb: config/openstack-ca.crt
  config/service-account-public-key.pem.erb: config/service-account-public-key.pem
  config/service_key.json.erb: config/service_key.json
  config/tokens.csv.erb: config/tokens.csv
packages:
- kubernetes
properties:
  admin-password:
    description: The password for the admin account
  admin-username:
    description: The admin username for the Kubernetes cluster
  http_proxy:
    description: http_proxy env var for the kubernetes-api binary (i.e. for cloud
      provider interactions)
  https_proxy:
    description: https_proxy env var for the kubernetes-api binary (i.e. for cloud
      provider interactions)
  k8s-args:
    address:
      description: 'DEPRECATED: see --insecure-bind-address instead.'
    admission-control:
      description: 'Admission is divided into two phases. In the first phase, only
        mutating admission plugins run. In the second phase, only validating admission
        plugins run. The names in the below list may represent a validating plugin,
        a mutating plugin, or both. The order of plugins in which they are passed
        to this flag does not matter. Comma-delimited list of: AlwaysAdmit, AlwaysDeny,
        AlwaysPullImages, DefaultStorageClass, DefaultTolerationSeconds, DenyEscalatingExec,
        DenyExecOnPrivileged, EventRateLimit, ExtendedResourceToleration, ImagePolicyWebhook,
        Initializers, LimitPodHardAntiAffinityTopology, LimitRanger, MutatingAdmissionWebhook,
        NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle, NodeRestriction,
        OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize, PersistentVolumeLabel,
        PodNodeSelector, PodPreset, PodSecurityPolicy, PodTolerationRestriction, Priority,
        ResourceQuota, SecurityContextDeny, ServiceAccount, StorageObjectInUseProtection,
        ValidatingAdmissionWebhook.'
    admission-control-config-file:
      description: File with admission control configuration.
    advertise-address:
      description: The IP address on which to advertise the apiserver to members of
        the cluster. This address must be reachable by the rest of the cluster. If
        blank, the --bind-address will be used. If --bind-address is unspecified,
        the host's default interface will be used.
    allow-privileged:
      description: If true, allow privileged containers. [default=false]
    alsologtostderr:
      description: log to standard error as well as files
    anonymous-auth:
      description: Enables anonymous requests to the secure port of the API server.
        Requests that are not rejected by another authentication method are treated
        as anonymous requests. Anonymous requests have a username of system:anonymous,
        and a group name of system:unauthenticated.
    application_metrics_count_limit:
      description: Max number of application metrics to store (per container)
    audit-log-batch-buffer-size:
      description: The size of the buffer to store events before batching and writing.
        Only used in batch mode.
    audit-log-batch-max-size:
      description: The maximum size of a batch. Only used in batch mode.
    audit-log-batch-max-wait:
      description: The amount of time to wait before force writing the batch that
        hadn't reached the max size. Only used in batch mode.
    audit-log-batch-throttle-burst:
      description: Maximum number of requests sent at the same moment if ThrottleQPS
        was not utilized before. Only used in batch mode.
    audit-log-batch-throttle-enable:
      description: Whether batching throttling is enabled. Only used in batch mode.
    audit-log-batch-throttle-qps:
      description: Maximum average number of batches per second. Only used in batch
        mode.
    audit-log-format:
      description: Format of saved audits. "legacy" indicates 1-line text format for
        each event. "json" indicates structured json format. Requires the 'AdvancedAuditing'
        feature gate. Known formats are legacy,json.
    audit-log-maxage:
      description: The maximum number of days to retain old audit log files based
        on the timestamp encoded in their filename.
    audit-log-maxbackup:
      description: The maximum number of old audit log files to retain.
    audit-log-maxsize:
      description: The maximum size in megabytes of the audit log file before it gets
        rotated.
    audit-log-mode:
      description: Strategy for sending audit events. Blocking indicates sending events
        should block server responses. Batch causes the backend to buffer and write
        events asynchronously. Known modes are batch,blocking.
    audit-log-path:
      description: If set, all requests coming to the apiserver will be logged to
        this file.  '-' means standard out.
    audit-log-truncate-enabled:
      description: Whether event and batch truncating is enabled.
    audit-log-truncate-max-batch-size:
      description: Maximum size of the batch sent to the underlying backend. Actual
        serialized size can be several hundreds of bytes greater. If a batch exceeds
        this limit, it is split into several batches of smaller size.
    audit-log-truncate-max-event-size:
      description: Maximum size of the audit event sent to the underlying backend.
        If the size of an event is greater than this number, first request and response
        are removed, andif this doesn't reduce the size enough, event is discarded.
    audit-log-version:
      description: API group and version used for serializing audit events written
        to log.
    audit-policy-file:
      description: Path to the file that defines the audit policy configuration. Requires
        the 'AdvancedAuditing' feature gate. With AdvancedAuditing, a profile is required
        to enable auditing.
    audit-webhook-batch-buffer-size:
      description: The size of the buffer to store events before batching and writing.
        Only used in batch mode.
    audit-webhook-batch-initial-backoff:
      description: The amount of time to wait before retrying the first failed request.
    audit-webhook-batch-max-size:
      description: The maximum size of a batch. Only used in batch mode.
    audit-webhook-batch-max-wait:
      description: The amount of time to wait before force writing the batch that
        hadn't reached the max size. Only used in batch mode.
    audit-webhook-batch-throttle-burst:
      description: Maximum number of requests sent at the same moment if ThrottleQPS
        was not utilized before. Only used in batch mode.
    audit-webhook-batch-throttle-enable:
      description: Whether batching throttling is enabled. Only used in batch mode.
    audit-webhook-batch-throttle-qps:
      description: Maximum average number of batches per second. Only used in batch
        mode.
    audit-webhook-config-file:
      description: Path to a kubeconfig formatted file that defines the audit webhook
        configuration. Requires the 'AdvancedAuditing' feature gate.
    audit-webhook-initial-backoff:
      description: The amount of time to wait before retrying the first failed request.
    audit-webhook-mode:
      description: Strategy for sending audit events. Blocking indicates sending events
        should block server responses. Batch causes the backend to buffer and write
        events asynchronously. Known modes are batch,blocking.
    audit-webhook-truncate-enabled:
      description: Whether event and batch truncating is enabled.
    audit-webhook-truncate-max-batch-size:
      description: Maximum size of the batch sent to the underlying backend. Actual
        serialized size can be several hundreds of bytes greater. If a batch exceeds
        this limit, it is split into several batches of smaller size.
    audit-webhook-truncate-max-event-size:
      description: Maximum size of the audit event sent to the underlying backend.
        If the size of an event is greater than this number, first request and response
        are removed, andif this doesn't reduce the size enough, event is discarded.
    audit-webhook-version:
      description: API group and version used for serializing audit events written
        to webhook.
    authentication-token-webhook-cache-ttl:
      description: The duration to cache responses from the webhook token authenticator.
    authentication-token-webhook-config-file:
      description: File with webhook configuration for token authentication in kubeconfig
        format. The API server will query the remote service to determine authentication
        for bearer tokens.
    authorization-mode:
      description: 'Ordered list of plug-ins to do authorization on secure port. Comma-delimited
        list of: AlwaysAllow,AlwaysDeny,ABAC,Webhook,RBAC,Node.'
    authorization-policy-file:
      description: File with authorization policy in csv format, used with --authorization-mode=ABAC,
        on the secure port.
    authorization-webhook-cache-authorized-ttl:
      description: The duration to cache 'authorized' responses from the webhook authorizer.
    authorization-webhook-cache-unauthorized-ttl:
      description: The duration to cache 'unauthorized' responses from the webhook
        authorizer.
    authorization-webhook-config-file:
      description: File with webhook configuration in kubeconfig format, used with
        --authorization-mode=Webhook. The API server will query the remote service
        to determine access on the API server's secure port.
    basic-auth-file:
      description: If set, the file that will be used to admit requests to the secure
        port of the API server via http basic authentication.
    bind-address:
      description: 'The IP address on which to listen for the --secure-port port.
        The associated interface(s) must be reachable by the rest of the cluster,
        and by CLI/web clients. If blank, all interfaces will be used (0.0.0.0 for
        all IPv4 interfaces and :: for all IPv6 interfaces).'
    boot_id_file:
      description: Comma-separated list of files to check for boot-id. Use the first
        one that exists.
    cert-dir:
      description: The directory where the TLS certs are located. If --tls-cert-file
        and --tls-private-key-file are provided, this flag will be ignored.
    client-ca-file:
      description: If set, any request presenting a client certificate signed by one
        of the authorities in the client-ca-file is authenticated with an identity
        corresponding to the CommonName of the client certificate.
    cloud-provider-gce-lb-src-cidrs:
      description: CIDRs opened in GCE firewall for LB traffic proxy & health checks
    container_hints:
      description: location of the container hints file
    containerd:
      description: containerd endpoint
    contention-profiling:
      description: Enable lock contention profiling, if profiling is enabled
    cors-allowed-origins:
      description: List of allowed origins for CORS, comma separated.  An allowed
        origin can be a regular expression to support subdomain matching. If this
        list is empty CORS will not be enabled.
    default-not-ready-toleration-seconds:
      description: Indicates the tolerationSeconds of the toleration for notReady:NoExecute
        that is added by default to every pod that does not already have such a toleration.
    default-unreachable-toleration-seconds:
      description: Indicates the tolerationSeconds of the toleration for unreachable:NoExecute
        that is added by default to every pod that does not already have such a toleration.
    default-watch-cache-size:
      description: Default watch cache size. If zero, watch cache will be disabled
        for resources that do not have a default watch size set.
    delete-collection-workers:
      description: Number of workers spawned for DeleteCollection call. These are
        used to speed up namespace cleanup.
    deserialization-cache-size:
      description: Number of deserialized json objects to cache in memory.
    disable-admission-plugins:
      description: 'admission plugins that should be disabled although they are in
        the default enabled plugins list. Comma-delimited list of admission plugins:
        AlwaysAdmit, AlwaysDeny, AlwaysPullImages, DefaultStorageClass, DefaultTolerationSeconds,
        DenyEscalatingExec, DenyExecOnPrivileged, EventRateLimit, ExtendedResourceToleration,
        ImagePolicyWebhook, Initializers, LimitPodHardAntiAffinityTopology, LimitRanger,
        MutatingAdmissionWebhook, NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle,
        NodeRestriction, OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize,
        PersistentVolumeLabel, PodNodeSelector, PodPreset, PodSecurityPolicy, PodTolerationRestriction,
        Priority, ResourceQuota, SecurityContextDeny, ServiceAccount, StorageObjectInUseProtection,
        ValidatingAdmissionWebhook. The order of plugins in this flag does not matter.'
    docker:
      description: docker endpoint
    docker-tls:
      description: use TLS to connect to docker
    docker-tls-ca:
      description: path to trusted CA
    docker-tls-cert:
      description: path to client certificate
    docker-tls-key:
      description: path to private key
    docker_env_metadata_whitelist:
      description: a comma-separated list of environment variable keys that needs
        to be collected for docker containers
    docker_only:
      description: Only report docker containers in addition to root stats
    docker_root:
      description: 'DEPRECATED: docker root is read from docker info (this is a fallback,
        default: /var/lib/docker)'
    enable-admission-plugins:
      description: 'admission plugins that should be enabled in addition to default
        enabled ones. Comma-delimited list of admission plugins: AlwaysAdmit, AlwaysDeny,
        AlwaysPullImages, DefaultStorageClass, DefaultTolerationSeconds, DenyEscalatingExec,
        DenyExecOnPrivileged, EventRateLimit, ExtendedResourceToleration, ImagePolicyWebhook,
        Initializers, LimitPodHardAntiAffinityTopology, LimitRanger, MutatingAdmissionWebhook,
        NamespaceAutoProvision, NamespaceExists, NamespaceLifecycle, NodeRestriction,
        OwnerReferencesPermissionEnforcement, PersistentVolumeClaimResize, PersistentVolumeLabel,
        PodNodeSelector, PodPreset, PodSecurityPolicy, PodTolerationRestriction, Priority,
        ResourceQuota, SecurityContextDeny, ServiceAccount, StorageObjectInUseProtection,
        ValidatingAdmissionWebhook. The order of plugins in this flag does not matter.'
    enable-aggregator-routing:
      description: Turns on aggregator routing requests to endoints IP rather than
        cluster IP.
    enable-bootstrap-token-auth:
      description: Enable to allow secrets of type 'bootstrap.kubernetes.io/token'
        in the 'kube-system' namespace to be used for TLS bootstrapping authentication.
    enable-garbage-collector:
      description: Enables the generic garbage collector. MUST be synced with the
        corresponding flag of the kube-controller-manager.
    enable-logs-handler:
      description: If true, install a /logs handler for the apiserver logs.
    enable-swagger-ui:
      description: Enables swagger ui on the apiserver at /swagger-ui
    enable_load_reader:
      description: Whether to enable cpu load reader
    endpoint-reconciler-type:
      description: Use an endpoint reconciler (master-count, lease, none)
    etcd-cafile:
      description: SSL Certificate Authority file used to secure etcd communication.
    etcd-certfile:
      description: SSL certification file used to secure etcd communication.
    etcd-compaction-interval:
      description: The interval of compaction requests. If 0, the compaction request
        from apiserver is disabled.
    etcd-count-metric-poll-period:
      description: Frequency of polling etcd for number of resources per type. 0 disables
        the metric collection.
    etcd-keyfile:
      description: SSL key file used to secure etcd communication.
    etcd-prefix:
      description: The prefix to prepend to all resource paths in etcd.
    etcd-quorum-read:
      description: If true, enable quorum read. It defaults to true and is strongly
        recommended not setting to false.
    etcd-servers:
      description: List of etcd servers to connect with (scheme://ip:port), comma
        separated.
    etcd-servers-overrides:
      description: 'Per-resource etcd servers overrides, comma separated. The individual
        override format: group/resource#servers, where servers are URLs, semicolon
        separated.'
    event-ttl:
      description: Amount of time to retain events.
    event_storage_age_limit:
      description: 'Max length of time for which to store events (per type). Value
        is a comma separated list of key values, where the keys are event types (e.g.:
        creation, oom) or "default" and the value is a duration. Default is applied
        to all non-specified event types'
    event_storage_event_limit:
      description: 'Max number of events to store (per type). Value is a comma separated
        list of key values, where the keys are event types (e.g.: creation, oom) or
        "default" and the value is an integer. Default is applied to all non-specified
        event types'
    experimental-encryption-provider-config:
      description: The file containing configuration for encryption providers to be
        used for storing secrets in etcd
    external-hostname:
      description: The hostname to use when generating externalized URLs for this
        master (e.g. Swagger API Docs).
    feature-gates:
      description: |-
        A set of key=value pairs that describe feature gates for alpha/experimental features. Options are:
        APIListChunking=true|false (BETA - default=true)
        APIResponseCompression=true|false (ALPHA - default=false)
        AdvancedAuditing=true|false (BETA - default=true)
        AllAlpha=true|false (ALPHA - default=false)
        AppArmor=true|false (BETA - default=true)
        AttachVolumeLimit=true|false (ALPHA - default=false)
        BalanceAttachedNodeVolumes=true|false (ALPHA - default=false)
        BlockVolume=true|false (ALPHA - default=false)
        CPUManager=true|false (BETA - default=true)
        CRIContainerLogRotation=true|false (BETA - default=true)
        CSIBlockVolume=true|false (ALPHA - default=false)
        CSIPersistentVolume=true|false (BETA - default=true)
        CustomPodDNS=true|false (BETA - default=true)
        CustomResourceSubresources=true|false (BETA - default=true)
        CustomResourceValidation=true|false (BETA - default=true)
        DebugContainers=true|false (ALPHA - default=false)
        DevicePlugins=true|false (BETA - default=true)
        DynamicKubeletConfig=true|false (BETA - default=true)
        DynamicProvisioningScheduling=true|false (ALPHA - default=false)
        EnableEquivalenceClassCache=true|false (ALPHA - default=false)
        ExpandInUsePersistentVolumes=true|false (ALPHA - default=false)
        ExpandPersistentVolumes=true|false (BETA - default=true)
        ExperimentalCriticalPodAnnotation=true|false (ALPHA - default=false)
        ExperimentalHostUserNamespaceDefaulting=true|false (BETA - default=false)
        GCERegionalPersistentDisk=true|false (BETA - default=true)
        HugePages=true|false (BETA - default=true)
        HyperVContainer=true|false (ALPHA - default=false)
        Initializers=true|false (ALPHA - default=false)
        KubeletPluginsWatcher=true|false (ALPHA - default=false)
        LocalStorageCapacityIsolation=true|false (BETA - default=true)
        MountContainers=true|false (ALPHA - default=false)
        MountPropagation=true|false (BETA - default=true)
        PersistentLocalVolumes=true|false (BETA - default=true)
        PodPriority=true|false (BETA - default=true)
        PodReadinessGates=true|false (BETA - default=false)
        PodShareProcessNamespace=true|false (ALPHA - default=false)
        QOSReserved=true|false (ALPHA - default=false)
        ReadOnlyAPIDataVolumes=true|false (DEPRECATED - default=true)
        ResourceLimitsPriorityFunction=true|false (ALPHA - default=false)
        ResourceQuotaScopeSelectors=true|false (ALPHA - default=false)
        RotateKubeletClientCertificate=true|false (BETA - default=true)
        RotateKubeletServerCertificate=true|false (ALPHA - default=false)
        RunAsGroup=true|false (ALPHA - default=false)
        ScheduleDaemonSetPods=true|false (ALPHA - default=false)
        ServiceNodeExclusion=true|false (ALPHA - default=false)
        ServiceProxyAllowExternalIPs=true|false (DEPRECATED - default=false)
        StorageObjectInUseProtection=true|false (default=true)
        StreamingProxyRedirects=true|false (BETA - default=true)
        SupportIPVSProxyMode=true|false (default=true)
        SupportPodPidsLimit=true|false (ALPHA - default=false)
        Sysctls=true|false (BETA - default=true)
        TaintBasedEvictions=true|false (ALPHA - default=false)
        TaintNodesByCondition=true|false (ALPHA - default=false)
        TokenRequest=true|false (ALPHA - default=false)
        TokenRequestProjection=true|false (ALPHA - default=false)
        VolumeScheduling=true|false (BETA - default=true)
        VolumeSubpath=true|false (default=true)
        VolumeSubpathEnvExpansion=true|false (ALPHA - default=false)
    global_housekeeping_interval:
      description: Interval between global housekeepings
    housekeeping_interval:
      description: Interval between container housekeepings
    http2-max-streams-per-connection:
      description: The limit that the server gives to clients for the maximum number
        of streams in an HTTP/2 connection. Zero means to use golang's default.
    insecure-bind-address:
      description: 'The IP address on which to serve the --insecure-port (set to 0.0.0.0
        for all IPv4 interfaces and :: for all IPv6 interfaces).'
    insecure-port:
      description: The port on which to serve unsecured, unauthenticated access. It
        is assumed that firewall rules are set up such that this port is not reachable
        from outside of the cluster and that port 443 on the cluster's public address
        is proxied to this port. This is performed by nginx in the default setup.
        Set to zero to disable.
    kubelet-certificate-authority:
      description: Path to a cert file for the certificate authority.
    kubelet-client-certificate:
      description: Path to a client cert file for TLS.
    kubelet-client-key:
      description: Path to a client key file for TLS.
    kubelet-https:
      description: Use https for kubelet connections.
    kubelet-port:
      description: 'DEPRECATED: kubelet port.'
    kubelet-preferred-address-types:
      description: List of the preferred NodeAddressTypes to use for kubelet connections.
    kubelet-read-only-port:
      description: 'DEPRECATED: kubelet port.'
    kubelet-timeout:
      description: Timeout for kubelet operations.
    kubernetes-service-node-port:
      description: If non-zero, the Kubernetes master service (which apiserver creates/maintains)
        will be of type NodePort, using this as the value of the port. If zero, the
        Kubernetes master service will be of type ClusterIP.
    log_backtrace_at:
      description: when logging hits line file:N, emit a stack trace
    log_cadvisor_usage:
      description: Whether to log the usage of the cAdvisor container
    log_dir:
      description: If non-empty, write log files in this directory
    logtostderr:
      description: log to standard error instead of files
    machine_id_file:
      description: Comma-separated list of files to check for machine-id. Use the
        first one that exists.
    master-service-namespace:
      description: 'DEPRECATED: the namespace from which the kubernetes master services
        should be injected into pods.'
    max-connection-bytes-per-sec:
      description: If non-zero, throttle each user connection to this number of bytes/sec.
        Currently only applies to long-running requests.
    max-mutating-requests-inflight:
      description: The maximum number of mutating requests in flight at a given time.
        When the server exceeds this, it rejects requests. Zero for no limit.
    max-requests-inflight:
      description: The maximum number of non-mutating requests in flight at a given
        time. When the server exceeds this, it rejects requests. Zero for no limit.
    min-request-timeout:
      description: An optional field indicating the minimum number of seconds a handler
        must keep a request open before timing it out. Currently only honored by the
        watch request handler, which picks a randomized value above this number as
        the connection timeout, to spread out load.
    oidc-ca-file:
      description: If set, the OpenID server's certificate will be verified by one
        of the authorities in the oidc-ca-file, otherwise the host's root CA set will
        be used.
    oidc-client-id:
      description: The client ID for the OpenID Connect client, must be set if oidc-issuer-url
        is set.
    oidc-groups-claim:
      description: If provided, the name of a custom OpenID Connect claim for specifying
        user groups. The claim value is expected to be a string or array of strings.
        This flag is experimental, please see the authentication documentation for
        further details.
    oidc-groups-prefix:
      description: If provided, all groups will be prefixed with this value to prevent
        conflicts with other authentication strategies.
    oidc-issuer-url:
      description: The URL of the OpenID issuer, only HTTPS scheme will be accepted.
        If set, it will be used to verify the OIDC JSON Web Token (JWT).
    oidc-required-claim:
      description: A key=value pair that describes a required claim in the ID Token.
        If set, the claim is verified to be present in the ID Token with a matching
        value. Repeat this flag to specify multiple claims.
    oidc-signing-algs:
      description: Comma-separated list of allowed JOSE asymmetric signing algorithms.
        JWTs with a 'alg' header value not in this list will be rejected. Values are
        defined by RFC 7518 https://tools.ietf.org/html/rfc7518#section-3.1.
    oidc-username-claim:
      description: The OpenID claim to use as the user name. Note that claims other
        than the default ('sub') is not guaranteed to be unique and immutable. This
        flag is experimental, please see the authentication documentation for further
        details.
    oidc-username-prefix:
      description: If provided, all usernames will be prefixed with this value. If
        not provided, username claims other than 'email' are prefixed by the issuer
        URL to avoid clashes. To skip any prefixing, provide the value '-'.
    port:
      description: 'DEPRECATED: see --insecure-port instead.'
    profiling:
      description: Enable profiling via web interface host:port/debug/pprof/
    proxy-client-cert-file:
      description: Client certificate used to prove the identity of the aggregator
        or kube-apiserver when it must call out during a request. This includes proxying
        requests to a user api-server and calling out to webhook admission plugins.
        It is expected that this cert includes a signature from the CA in the --requestheader-client-ca-file
        flag. That CA is published in the 'extension-apiserver-authentication' configmap
        in the kube-system namespace. Components receiving calls from kube-aggregator
        should use that CA to perform their half of the mutual TLS verification.
    proxy-client-key-file:
      description: Private key for the client certificate used to prove the identity
        of the aggregator or kube-apiserver when it must call out during a request.
        This includes proxying requests to a user api-server and calling out to webhook
        admission plugins.
    repair-malformed-updates:
      description: deprecated
    request-timeout:
      description: An optional field indicating the duration a handler must keep a
        request open before timing it out. This is the default request timeout for
        requests but may be overridden by flags such as --min-request-timeout for
        specific types of requests.
    requestheader-allowed-names:
      description: List of client certificate common names to allow to provide usernames
        in headers specified by --requestheader-username-headers. If empty, any client
        certificate validated by the authorities in --requestheader-client-ca-file
        is allowed.
    requestheader-client-ca-file:
      description: 'Root certificate bundle to use to verify client certificates on
        incoming requests before trusting usernames in headers specified by --requestheader-username-headers.
        WARNING: generally do not depend on authorization being already done for incoming
        requests.'
    requestheader-extra-headers-prefix:
      description: List of request header prefixes to inspect. X-Remote-Extra- is
        suggested.
    requestheader-group-headers:
      description: List of request headers to inspect for groups. X-Remote-Group is
        suggested.
    requestheader-username-headers:
      description: List of request headers to inspect for usernames. X-Remote-User
        is common.
    runtime-config:
      description: A set of key=value pairs that describe runtime configuration that
        may be passed to apiserver. <group>/<version> (or <version> for the core group)
        key can be used to turn on/off specific api versions. api/all is special key
        to control all api versions, be careful setting it false, unless you know
        what you do. api/legacy is deprecated, we will remove it in the future, so
        stop using it.
    secure-port:
      description: The port on which to serve HTTPS with authentication and authorization.
        If 0, don't serve HTTPS at all.
    service-account-api-audiences:
      description: Identifiers of the API. The service account token authenticator
        will validate that tokens used against the API are bound to at least one of
        these audiences.
    service-account-issuer:
      description: Identifier of the service account token issuer. The issuer will
        assert this identifier in "iss" claim of issued tokens. This value is a string
        or URI.
    service-account-key-file:
      description: File containing PEM-encoded x509 RSA or ECDSA private or public
        keys, used to verify ServiceAccount tokens. The specified file can contain
        multiple keys, and the flag can be specified multiple times with different
        files. If unspecified, --tls-private-key-file is used. Must be specified when
        --service-account-signing-key is provided
    service-account-lookup:
      description: If true, validate ServiceAccount tokens exist in etcd as part of
        authentication.
    service-account-signing-key-file:
      description: Path to the file that contains the current private key of the service
        account token issuer. The issuer will sign issued ID tokens with this private
        key. (Requires the 'TokenRequest' feature gate.)
    service-cluster-ip-range:
      description: A CIDR notation IP range from which to assign service cluster IPs.
        This must not overlap with any IP ranges assigned to nodes for pods.
    service-node-port-range:
      description: 'A port range to reserve for services with NodePort visibility.
        Example: ''30000-32767''. Inclusive at both ends of the range.'
    ssh-keyfile:
      description: If non-empty, use secure SSH proxy to the nodes, using this user
        keyfile
    ssh-user:
      description: If non-empty, use secure SSH proxy to the nodes, using this user
        name
    stderrthreshold:
      description: logs at or above this threshold go to stderr
    storage-backend:
      description: 'The storage backend for persistence. Options: ''etcd3'' (default),
        ''etcd2''.'
    storage-media-type:
      description: The media type to use to store objects in storage. Some resources
        or storage backends may only support a specific media type and will ignore
        this setting.
    storage-versions:
      description: The per-group version to store resources in. Specified in the format
        "group1/version1,group2/version2,...". In the case where objects are moved
        from one group to the other, you may specify the format "group1=group2/v1beta1,group3/v1beta1,...".
        You only need to pass the groups you wish to change from the defaults. It
        defaults to a list of preferred versions of all known groups.
    storage_driver_buffer_duration:
      description: Writes in the storage driver will be buffered for this duration,
        and committed to the non memory backends as a single transaction
    storage_driver_db:
      description: database name
    storage_driver_host:
      description: database host:port
    storage_driver_password:
      description: database password
    storage_driver_secure:
      description: use secure connection with database
    storage_driver_table:
      description: table name
    storage_driver_user:
      description: database username
    target-ram-mb:
      description: Memory limit for apiserver in MB (used to configure sizes of caches,
        etc.)
    tls-cert-file:
      description: File containing the default x509 Certificate for HTTPS. (CA cert,
        if any, concatenated after server cert). If HTTPS serving is enabled, and
        --tls-cert-file and --tls-private-key-file are not provided, a self-signed
        certificate and key are generated for the public address and saved to the
        directory specified by --cert-dir.
    tls-cipher-suites:
      description: 'Comma-separated list of cipher suites for the server. If omitted,
        the default Go cipher suites will be use.  Possible values: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_RC4_128_SHA,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_3DES_EDE_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_RC4_128_SHA'
    tls-min-version:
      description: 'Minimum TLS version supported. Possible values: VersionTLS10,
        VersionTLS11, VersionTLS12'
    tls-private-key-file:
      description: File containing the default x509 private key matching --tls-cert-file.
    tls-sni-cert-key:
      description: 'A pair of x509 certificate and private key file paths, optionally
        suffixed with a list of domain patterns which are fully qualified domain names,
        possibly with prefixed wildcard segments. If no domain patterns are provided,
        the names of the certificate are extracted. Non-wildcard matches trump over
        wildcard matches, explicit domain patterns trump over extracted names. For
        multiple key/certificate pairs, use the --tls-sni-cert-key multiple times.
        Examples: "example.crt,example.key" or "foo.crt,foo.key:*.foo.com,foo.com".'
    token-auth-file:
      description: If set, the file that will be used to secure the secure port of
        the API server via token authentication.
    v:
      description: log level for V logs
    vmodule:
      description: comma-separated list of pattern=N settings for file-filtered logging
    watch-cache:
      description: Enable watch caching in the apiserver
    watch-cache-sizes:
      description: 'List of watch cache sizes for every resource (pods, nodes, etc.),
        comma separated. The individual override format: resource[.group]#size, where
        resource is lowercase plural (no version), group is optional, and size is
        a number. It takes effect when watch-cache is enabled. Some resources (replicationcontrollers,
        endpoints, nodes, pods, services, apiservices.apiregistration.k8s.io) have
        system defaults set by heuristics, others default to default-watch-cache-size'
  kube-controller-manager-password:
    description: The password for the system:kube-controller-manager user
  kube-proxy-password:
    description: The password for the kube-proxy user
  kube-scheduler-password:
    description: The password for the system:kube-scheduler user
  kubelet-drain-password:
    description: The password for the kubelet drain user
  kubelet-password:
    description: The password for the kubelet user
  no_proxy:
    description: no_proxy env var for the kubernetes-api binary (i.e. for cloud provider
      interactions)
  service-account-public-key:
    description: Public key used to verify service account tokens
  tls.kubelet-client:
    description: kubelet client cert
  tls.kubernetes.ca:
    description: CA Certificate for the Kubernetes master
  tls.kubernetes.certificate:
    description: Certificate for the Kubernetes master
  tls.kubernetes.private_key:
    description: Private key for the Kubernetes master
consumes:
- name: etcd
  type: etcd
- name: kube-apiserver
  type: kube-apiserver
- name: cloud-provider
  optional: true
  type: cloud-provider
provides:
- name: kube-apiserver
  properties:
  - admin-username
  - admin-password
  - tls.kubernetes.ca
  type: kube-apiserver
