---
processes:
- name: kube-controller-manager
  executable: /var/vcap/packages/kubernetes/bin/kube-controller-manager
  args:
  <% if_link('cloud-provider') do |cloud_provider| %>
  - --cloud-provider=<%= cloud_provider.p('cloud-provider.type') %>
  - --cloud-config=/var/vcap/jobs/kube-controller-manager/config/cloud-provider.ini
  <% end %>
  - --cluster-name=kubernetes
  - --cluster-signing-cert-file=/var/vcap/jobs/kube-controller-manager/config/cluster-signing-ca.pem
  - --cluster-signing-key-file=/var/vcap/jobs/kube-controller-manager/config/cluster-signing-key.pem
  - --kubeconfig=/var/vcap/jobs/kube-controller-manager/config/kubeconfig
  - --leader-elect
  - --root-ca-file=/var/vcap/jobs/kube-controller-manager/config/ca.pem
  - --service-account-private-key-file=/var/vcap/jobs/kube-controller-manager/config/service-account-private-key.pem
  - --service-cluster-ip-range=10.100.200.0/24
  - --terminated-pod-gc-threshold=100
  - --use-service-account-credentials
  - --v=<%=p('logging-level') %>
  env:
    <% if_p('no_proxy') do |no_proxy| %>
    NO_PROXY: <%= no_proxy %>
    no_proxy: <%= no_proxy %>
    <% end %>
    <% if_p('https_proxy') do |https_proxy| %>
    HTTPS_PROXY: <%= https_proxy %>
    https_proxy: <%= https_proxy %>
    <% end %>
    <% if_p('http_proxy') do |http_proxy| %>
    HTTP_PROXY: <%= http_proxy %>
    http_proxy: <%= http_proxy %>
    <% end %>
    <% if_link('cloud-provider') do |cloud_provider| %>
    <% cloud_provider.if_p('cloud-provider.gce.service_key') do |service_key| %>
    GOOGLE_APPLICATION_CREDENTIALS: /var/vcap/jobs/kube-controller-manager/config/service_key.json
    <% end %>
    <% cloud_provider.if_p('cloud-provider.aws.access_key_id') do |access_key_id| %>
    AWS_ACCESS_KEY_ID: <%= access_key_id %>
    <% end %>
    <% cloud_provider.if_p('cloud-provider.aws.secret_access_key') do |secret_access_key| %>
    AWS_SECRET_ACCESS_KEY: <%= secret_access_key %>
    <% end %>
    <% end %>
