---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    version: v0.3.1
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server
      volumes:
      # mount in tmp so we can safely use from-scratch images and/or read-only containers
      - name: tmp-dir
        emptyDir: {}
      - name: metrics-server-secrets
        secret:
           secretName: metrics-server-certs
      containers:
      - name: metrics-server
        image: k8s.gcr.io/metrics-server-amd64:v0.3.3
        imagePullPolicy: IfNotPresent
        command:
        - /metrics-server
        - --kubelet-preferred-address-types=InternalIP
        - --kubelet-insecure-tls
        - --client-ca-file=/var/run/kubernetes/client-ca.crt
        - --requestheader-client-ca-file=/var/run/kubernetes/requestheader-client-ca.crt
        - --tls-cert-file=/var/run/kubernetes/client.crt
        - --tls-private-key-file=/var/run/kubernetes/client.key
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
        - name: metrics-server-secrets
          mountPath: /var/run/kubernetes
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
